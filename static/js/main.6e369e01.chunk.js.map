{"version":3,"sources":["Components/Detail/Details.js","Components/Home/Countries.js","Components/Home/Home.js","Components/Detail/BorderDetail.js","App.js","index.js"],"names":["Details","isDarkMode","useContext","ThemeContext","code","useParams","useState","countries","setCountries","useEffect","axios","get","then","resp","data","id","console","log","className","to","map","country","index","src","flag","alt","name","nativeName","population","region","subregion","capital","topLevelDomain","currencies","currency","languages","lang","i","borders","border","Countries","alpha3Code","DataContext","React","createContext","Home","url","setNewAPI","e","target","innerText","toLowerCase","fetchData","currentUrl","a","isRegionOpen","setIsRegionOpen","Provider","value","onKeyUp","placeholder","type","onClick","style","transform","display","BorderDetail","App","setIsDarkMode","document","body","classList","add","remove","exact","path","children","Index","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6e369e01.chunk.js","sourcesContent":["//This file loops to BorderDetail.js\r\n\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { ThemeContext } from \"../../App\";\r\nimport axios from \"axios\";\r\nconst Details = () => {\r\n  const isDarkMode = useContext(ThemeContext);\r\n\r\n  //using link param to fetch the clicked country\r\n  const { code } = useParams();\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  //fetching data\r\n  const fetchData = () => {\r\n    axios.get(`https://restcountries.eu/rest/v2/alpha/${code}`).then((resp) => {\r\n      setCountries([resp.data]);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <section id=\"details\">\r\n      {console.log(countries)}\r\n      <div className=\"container\">\r\n        <div className=\"back-btn\">\r\n          <Link className={`back-btn-inner ${isDarkMode ? \"dark-mode-element dark-mode-text\" : \"light-mode-element light-mode-text\"}`} to=\"/\">\r\n            <i className=\"fas fa-long-arrow-alt-left\"></i>\r\n            Back\r\n          </Link>\r\n        </div>\r\n        {countries.map((country, index) => {\r\n          return (\r\n            <div key={index} className=\"country-container\">\r\n              <div className=\"country-img\">\r\n                <img src={country.flag} alt=\"\" />\r\n              </div>\r\n              <div className={`country-details ${isDarkMode ? \"dark-mode-text\" : \"light-mode-text\"}`}>\r\n                <h2>{country.name}</h2>\r\n                <div className=\"detail-section-1\">\r\n                  <p>\r\n                    Native Name: <span>{country.nativeName}</span>\r\n                  </p>\r\n                  <p>\r\n                    Population: <span>{country.population}</span>\r\n                  </p>\r\n                  <p>\r\n                    Region: <span>{country.region}</span>\r\n                  </p>\r\n                  <p>\r\n                    Sub Region: <span>{country.subregion}</span>\r\n                  </p>\r\n                  <p>\r\n                    Capital: <span>{country.capital}</span>\r\n                  </p>\r\n                </div>\r\n                <div className=\"detail-section-2\">\r\n                  <p>\r\n                    Top Level Domain: <span>{country.topLevelDomain}</span>\r\n                  </p>\r\n                  <p>\r\n                    Currencies:{\" \"}\r\n                    {country.currencies.map((currency, index) => {\r\n                      return <span key={index}>{currency.name} </span>;\r\n                    })}\r\n                  </p>\r\n                  <p>\r\n                    Languages:{\" \"}\r\n                    {country.languages.map((lang, i) => (\r\n                      <span key={i}>{lang.name} </span>\r\n                    ))}\r\n                  </p>\r\n                </div>\r\n                <div className=\"detail-section-3\">\r\n                  <h2>Border Countries:</h2>\r\n                  <div className=\"borders\">\r\n                    {country.borders.map((border, i) => {\r\n                      return (\r\n                        <div key={i} className=\"border-country\">\r\n                          <Link\r\n                            to={`/border/${border}`}\r\n                            className={`border-country-inner ${\r\n                              isDarkMode ? \"dark-mode-element dark-mode-text\" : \"light-mode-element light-mode-text\"\r\n                            }`}\r\n                          >\r\n                            {border}\r\n                          </Link>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ThemeContext } from \"../../App\";\r\nconst Countries = ({ data }) => {\r\n  const isDarkMode = useContext(ThemeContext);\r\n\r\n  return (\r\n    <section id=\"countries\">\r\n      <div className=\"items\">\r\n        {data.map(({ flag, name, population, region, capital, alpha3Code }, index) => {\r\n          return (\r\n            <div key={index} className={`item`}>\r\n              <Link to={`/details/${alpha3Code}`}>\r\n                <div className={`item-inner ${isDarkMode ? \"dark-mode-element dark-mode-text\" : \"light-mode-element light-mode-text\"}`}>\r\n                  <div className=\"item-image\">\r\n                    <img src={flag} alt=\"\" />\r\n                  </div>\r\n                  <div className={`item-content`}>\r\n                    <h2>{name}</h2>\r\n                    <div className=\"item-details\">\r\n                      <p className=\"item-detail\">\r\n                        Population: <span>{population}</span>\r\n                      </p>\r\n                      <p className=\"item-detail\">\r\n                        Region: <span>{region}</span>\r\n                      </p>\r\n                      <p className=\"item-detail\">\r\n                        Capital: <span>{capital}</span>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Countries;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { ThemeContext } from \"../../App\";\r\nimport Countries from \"./Countries\";\r\nimport axios from \"axios\";\r\nexport const DataContext = React.createContext();\r\nconst Home = () => {\r\n  //initial url to fetch data\r\n  let url = \"https://restcountries.eu/rest/v2/all\";\r\n\r\n  //function to fetch data when searching for a specific country\r\n  const searchAPI = (e) => {\r\n    url = `https://restcountries.eu/rest/v2/name/${e.target.value}`;\r\n    fetchData(url);\r\n  };\r\n\r\n  //function to fetch filtered data based on region\r\n  const setNewAPI = (e) => {\r\n    url = `https://restcountries.eu/rest/v2/region/${e.target.innerText.toLowerCase()}`;\r\n    fetchData(url);\r\n  };\r\n\r\n  //The main function to fetch data\r\n  const fetchData = async (currentUrl) => {\r\n    console.log(currentUrl);\r\n    const { data } = await axios.get(currentUrl);\r\n    setCountries(data);\r\n  };\r\n  useEffect(() => {\r\n    fetchData(url);\r\n  }, [url]);\r\n\r\n  //countries data state\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  //using context API for theme change to use\r\n  const isDarkMode = useContext(ThemeContext);\r\n\r\n  //filter select option state for styling purposes\r\n  const [isRegionOpen, setIsRegionOpen] = useState(false);\r\n  return (\r\n    <DataContext.Provider value={countries}>\r\n      <section id=\"home\">\r\n        <div className=\"container\">\r\n          <div className=\"top-header\">\r\n            <div className={`search ${isDarkMode ? \"dark-mode-element dark-mode-input\" : \"light-mode-input\"}`}>\r\n              <i className=\"fas fa-search\"></i>\r\n              <input\r\n                onKeyUp={searchAPI}\r\n                className={`${isDarkMode ? \"dark-mode-element dark-mode-input\" : \"light-mode-input\"}`}\r\n                placeholder=\"Search for a country...\"\r\n                type=\"search\"\r\n              />\r\n            </div>\r\n            <div id=\"filter\">\r\n              <div\r\n                onClick={() => setIsRegionOpen(!isRegionOpen)}\r\n                className={`select ${isDarkMode ? \"dark-mode-element dark-mode-text\" : \"light-mode-element light-mode-text\"}`}\r\n              >\r\n                Filter by Country <i style={isRegionOpen ? { transform: \"rotate(180deg)\" } : { transform: \"unset\" }} className=\"fas fa-arrow-up\"></i>\r\n              </div>\r\n              <div\r\n                className={`regions ${isDarkMode ? \"dark-mode-element dark-mode-text\" : \"light-mode-element light-mode-text\"} ${\r\n                  isRegionOpen ? \"region-open\" : \"region-closed\"\r\n                }`}\r\n              >\r\n                <div\r\n                  onClick={setNewAPI}\r\n                  className=\"region\"\r\n                  style={isRegionOpen ? { display: \"block\" } : { display: \"none\" }}\r\n                  className={`region-links`}\r\n                >\r\n                  Africa\r\n                </div>\r\n                <div\r\n                  onClick={setNewAPI}\r\n                  className=\"region\"\r\n                  style={isRegionOpen ? { display: \"block\" } : { display: \"none\" }}\r\n                  className={`region-links`}\r\n                >\r\n                  Americas\r\n                </div>\r\n                <div\r\n                  onClick={setNewAPI}\r\n                  className=\"region\"\r\n                  style={isRegionOpen ? { display: \"block\" } : { display: \"none\" }}\r\n                  className={`region-links`}\r\n                >\r\n                  Asia\r\n                </div>\r\n                <div\r\n                  onClick={setNewAPI}\r\n                  className=\"region\"\r\n                  style={isRegionOpen ? { display: \"block\" } : { display: \"none\" }}\r\n                  className={`region-links`}\r\n                >\r\n                  Europe\r\n                </div>\r\n                <div\r\n                  onClick={setNewAPI}\r\n                  className=\"region\"\r\n                  style={isRegionOpen ? { display: \"block\" } : { display: \"none\" }}\r\n                  className={`region-links`}\r\n                >\r\n                  Oceania\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Countries data={countries}></Countries> {/* Passing fetched data to the Countries component*/}\r\n        </div>\r\n      </section>\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","//This file loops to Details.js\r\n\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { ThemeContext } from \"../../App\";\r\nconst BorderDetail = () => {\r\n  const isDarkMode = useContext(ThemeContext);\r\n\r\n  //Getting the clicked border link Param and fetching it from the API\r\n  const { code } = useParams();\r\n  const [countries, setCountries] = useState([]);\r\n  const fetchData = () => {\r\n    axios.get(`https://restcountries.eu/rest/v2/alpha/${code}`).then((resp) => {\r\n      setCountries([resp.data]);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <section id=\"details\">\r\n      {console.log(countries)}\r\n      <div className=\"container\">\r\n        <div className=\"back-btn\">\r\n          <Link className={`back-btn-inner ${isDarkMode ? \"dark-mode-element dark-mode-text\" : \"light-mode-element light-mode-text\"}`} to=\"/\">\r\n            <i className=\"fas fa-long-arrow-alt-left\"></i>\r\n            Back\r\n          </Link>\r\n        </div>\r\n        {countries.map((country, index) => {\r\n          return (\r\n            <div key={index} className=\"country-container\">\r\n              <div className=\"country-img\">\r\n                <img src={country.flag} alt=\"\" />\r\n              </div>\r\n              <div className={`country-details ${isDarkMode ? \"dark-mode-text\" : \"light-mode-text\"}`}>\r\n                <h2>{country.name}</h2>\r\n                <div className=\"detail-section-1\">\r\n                  <p>\r\n                    Native Name: <span>{country.nativeName}</span>\r\n                  </p>\r\n                  <p>\r\n                    Population: <span>{country.population}</span>\r\n                  </p>\r\n                  <p>\r\n                    Region: <span>{country.region}</span>\r\n                  </p>\r\n                  <p>\r\n                    Sub Region: <span>{country.subregion}</span>\r\n                  </p>\r\n                  <p>\r\n                    Capital: <span>{country.capital}</span>\r\n                  </p>\r\n                </div>\r\n                <div className=\"detail-section-2\">\r\n                  <p>\r\n                    Top Level Domain: <span>{country.topLevelDomain}</span>\r\n                  </p>\r\n                  <p>\r\n                    Currencies:{\" \"}\r\n                    {country.currencies.map((currency, index) => {\r\n                      return <span key={index}>{currency.name} </span>;\r\n                    })}\r\n                  </p>\r\n                  <p>\r\n                    Languages:{\" \"}\r\n                    {country.languages.map((lang, i) => (\r\n                      <span key={i}>{lang.name} </span>\r\n                    ))}\r\n                  </p>\r\n                </div>\r\n                <div className=\"detail-section-3\">\r\n                  <h2>Border Countries:</h2>\r\n                  <div className=\"borders\">\r\n                    {country.borders.map((border, i) => {\r\n                      return (\r\n                        <div key={i} className=\"border-country\">\r\n                          <Link\r\n                            to={`/details/${border}`}\r\n                            className={`border-country-inner ${\r\n                              isDarkMode ? \"dark-mode-element dark-mode-text\" : \"light-mode-element light-mode-text\"\r\n                            }`}\r\n                          >\r\n                            {border}\r\n                          </Link>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default BorderDetail;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Details from \"./Components/Detail/Details\";\r\nimport Home from \"./Components/Home/Home\";\r\nimport BorderDetail from \"./Components/Detail/BorderDetail\";\r\n\r\n//Making a theme context to be able to switch themes in my entire app\r\nexport const ThemeContext = React.createContext();\r\n\r\nconst App = () => {\r\n  //them state\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  useEffect(() => {\r\n    if (isDarkMode) {\r\n      document.body.classList.add(\"dark-mode-bg\");\r\n      document.body.classList.remove(\"light-mode-bg\");\r\n    } else {\r\n      document.body.classList.remove(\"dark-mode-bg\");\r\n      document.body.classList.add(\"light-mode-bg\");\r\n    }\r\n  }, [isDarkMode]);\r\n\r\n  return (\r\n    <Router>\r\n      <ThemeContext.Provider value={isDarkMode}>\r\n        <nav id=\"navbar\">\r\n          <div className={`navbar container ${isDarkMode ? \"dark-mode-text dark-mode-element\" : \"light-mode-text light-mode-element\"}`}>\r\n            <p className=\"logo\">Where in the world?</p>\r\n            <button\r\n              type=\"button\"\r\n              className={`change-theme ${isDarkMode ? \"dark-mode-text dark-mode-element\" : \"light-mode-text light-mode-element\"}`}\r\n              onClick={() => setIsDarkMode(!isDarkMode)}\r\n            >\r\n              <i className=\"fas fa-moon\"></i>\r\n              Dark Mode\r\n            </button>\r\n          </div>\r\n        </nav>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home></Home>\r\n          </Route>\r\n          <Route path=\"/details/:code\" children={<Details />}></Route>\r\n          <Route path=\"/border/:code\" children={<BorderDetail />}></Route>\r\n        </Switch>\r\n      </ThemeContext.Provider>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/style.css\";\nimport App from \"./App\";\nconst Index = () => {\n  return (\n    <>\n      <App />\n    </>\n  );\n};\n\nReactDOM.render(<Index />, document.getElementById(\"root\"));\n"],"sourceRoot":""}